FAILURE_DATA:
  select 
      sku_id,
      picker_host,
      count(*) as tasks, 
      sum(case when task_success=false then 1 else 0 end) as fails, 
      sum(case when pick_actions=0 then 1 else 0 end) as NoPickAttempts, 
      sum(case when pick_actions-successful_pick_actions=4 then 1 else 0 end) as error3C, 
      sum(case when successful_place_actions<place_actions then 1 else 0 end) as PlaceFails, 
      sum(case when move_to_scan_position_actions>pick_actions and task_success=false and pick_actions>0 then 1 else 0 end) as detfails
  from pick_cycle_agg 
  where
      task_end > '${start_date}'
      and task_end < '${end_date}'
  group by 
      sku_id,
      picker_host


FAILURE_DATA_WEEKLY:
  select 
      sku_id,
      picker_host,
      floor(date_part('day', task_end - '2023-01-02') / 7)::int as week,
      count(*) as tasks, 
      sum(case when task_success=false then 1 else 0 end) as fails, 
      sum(case when pick_actions=0 then 1 else 0 end) as NoPickAttempts, 
      sum(case when pick_actions-successful_pick_actions=4 then 1 else 0 end) as error3C, 
      sum(case when successful_place_actions<place_actions then 1 else 0 end) as PlaceFails, 
      sum(case when move_to_scan_position_actions>pick_actions and task_success=false and pick_actions>0 then 1 else 0 end) as detfails
  from pick_cycle_agg 
  where
      task_end > '${start_date}'
      and task_end < '${end_date}'
  group by 
      week,
      sku_id,
      picker_host


FAILURE_DATA_DAILY:
  select 
      sku_id,
      picker_host,
      date(task_end),
      count(*) as tasks, 
      sum(case when task_success=false then 1 else 0 end) as fails, 
      sum(case when pick_actions=0 then 1 else 0 end) as NoPickAttempts, 
      sum(case when pick_actions-successful_pick_actions=4 then 1 else 0 end) as error3C, 
      sum(case when successful_place_actions<place_actions then 1 else 0 end) as PlaceFails, 
      sum(case when move_to_scan_position_actions>pick_actions and task_success=false and pick_actions>0 then 1 else 0 end) as detfails
  from pick_cycle_agg
  where
      task_end > '${start_date}'
      and task_end < '${end_date}'
  group by 
      date(task_end),
      sku_id,
      picker_host



DATA_WEEKLY:
  with first_data as (
  select distinct on (command_id)
      command_id,
      floor(date_part('day', task_end - '2023-01-02') / 7)::int as week,
      task_success,
      pick_success,
      place_success,
      wms_sku_id,
      picker_host
  from scan_sku_agg
  where 
      task_end > '${start_date}'
      and task_end < '${end_date}'
  )
  
  select 
      week,
      picker_host,
      wms_sku_id as sku_id,
      sum(task_success::int) as task_success,
      sum(pick_success::int) as pick_success,
      sum(place_success::int) as place_success,
      count(task_success) as task_total,
      count(pick_success) as pick_total,
      count(place_success) as place_total
  from first_data
  group by 
      week,
      picker_host,
      wms_sku_id

DATA_TOTAL:
  with first_data as (
  select distinct on (command_id)
      command_id,
      task_success,
      pick_success,
      place_success,
      wms_sku_id,
  from scan_sku_agg
  where 
      task_end > '${start_date}'
      and task_end < '${end_date}'
  )
  
  select 
      picker_host,
      wms_sku_id,
      sum(task_success::int) as task_success,
      sum(pick_success::int) as pick_success,
      sum(place_success::int) as place_success,
      count(task_success) as task_total,
      count(pick_success) as pick_total,
      count(place_success) as place_total
  from first_data
  group by 
      picker_host,
      wms_sku_id


SKUS:
  select distinct on (wms_sku_id::int)
      * 
  from sku
  order by 
      wms_sku_id::int,
      version desc
